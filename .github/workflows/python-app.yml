# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        for path in lambdas/*/
        do
          if [[ -d "$path" ]]
          then
            echo "pasta root $path"
            FUNCTION_NAME=$(basename $path)
            BUILD_PACKEGE_NAME="$FUNCTION_NAME.zip"
            if [[ -f $path/requirements.txt ]]
            then
                echo "instalando dependencias da lambda $FUNCTION_NAME"
                pip install -r lambdas/$FUNCTION_NAME/requirements.txt --target lambdas/$FUNCTION_NAME/packages/ --find-links ./packages

                cd lambdas/$FUNCTION_NAME
                echo "Building $FUNCTION_NAME..."

                cd packages
                zip -r ../$BUILD_PACKEGE_NAME .            
                cd ..
                rm -rf packages
                zip -g $BUILD_PACKEGE_NAME *.py src/*
            else
                cd lambdas/$FUNCTION_NAME
                echo "Building $FUNCTION_NAME..."
                zip -r $BUILD_PACKEGE_NAME . -i *.py src/*
            fi
            cd $ROOT
          fi
        done        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
